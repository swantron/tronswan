name: Node.js CI and Deployment Status Check

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

  check-deployment:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Poll Deployment Status
        run: |
          RETRIES=60
          SLEEP_DURATION=10
          APP_ID="0513ce4c-b074-4139-bb38-a1c6a5bc97a6"
          DIGITALOCEAN_ACCESS_TOKEN="${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}"
          echo "Polling DigitalOcean App Platform deployment status..."
          for ((i=1;i<=RETRIES;i++)); do
            echo "Making request to DigitalOcean API..."
            RESPONSE=$(curl -s -X GET -H "Content-Type: application/json" -H "Authorization: Bearer $DIGITALOCEAN_ACCESS_TOKEN" "https://api.digitalocean.com/v2/apps/$APP_ID/deployments?per_page=1")
            echo "Response: $RESPONSE"
            if echo "$RESPONSE" | jq -e '.errors' > /dev/null; then
              echo "Error in response: $(echo $RESPONSE | jq '.errors')"
              exit 1
            fi
            DEPLOYMENT_STATUS=$(echo $RESPONSE | jq -r '.deployments[0].progress.steps[] | select(.name == "deploy").status')
            echo "Attempt $i: Deployment status is $DEPLOYMENT_STATUS"
            if [ "$DEPLOYMENT_STATUS" == "SUCCESS" ]; then
              echo "Deployment completed successfully."
              break
            fi
            if [ $i -eq $RETRIES ]; then
              echo "Deployment did not complete after $RETRIES attempts."
              exit 1
            fi
            sleep $SLEEP_DURATION
          done
          if [ "$DEPLOYMENT_STATUS" != "SUCCESS" ]; then
            echo "Deployment did not succeed."
            exit 1
          fi
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Run Playwright Tests
        if: success()
        run: |
          echo 'Running Playwright tests...'
          # Replace the next line with your actual Playwright test command
          echo 'TODO: Add your Playwright test command here.'
